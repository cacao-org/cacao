#!/usr/bin/env bash

MSdescr="Archive AO calibration"

MSextdescr="Copy current filesystem calibration to ../CACAO_LOOPNAME-AOcalibs/<calibname>/ directory
To be executed from loop rootdir"

source milk-script-std-config

# check and load cacaovars
source cacao-check-cacaovars
RequiredCommands=()
RequiredPipes=()
RequiredFiles=()


RequiredDirs=(conf)



#MSarg+=( "calibname:string:calibration name" )

#MSopt+=( "t:timestamp:settimestamp::append timestamp to name" )
#addtimestamp="0"
#function settimestamp() {
#        echo "Append timestamp to name"
#        addtimestamp="1"
#}



source milk-argparse
set +u
if [ "${EXITSTATUS}" = "1" ]; then
exit 1
fi
set -u




#calib="${inputMSargARRAY[0]}"
#echo "Calibration : ${calib}"





# Arguments:
# Calib name

DATESTRING="$(date -u +%Y-%m-%dT%H:%M:%S)"

ARCHDIR="../${CACAO_LOOPNAME}-calibs/${DATESTRING}/"

#if [ "${addtimestamp}" = "1" ]; then
#ARCHDIR=${ARCHDIR}_$(date -u +%Y-%m-%dT%H:%M:%S)
#fi


mkdir -p ${ARCHDIR}

echo "Saving to DIRECTORY ${ARCHDIR}"



CONFDIR="conf"

for f in $CONFDIR
do
    if [ -d "$f" ]
    then
        for ff in $f/*
        do      
            echo "Processing $ff"
        done
    else
        echo "Processing file $f"
    fi
done


exit 0

cp ${CACAO_LOOPRUNDIR}/fps.compfCM-${CACAO_LOOPNUMBER}.datadir/mkmodestmp/fmodesWFS1all.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_modesWFS.fits
cp ${CACAO_LOOPRUNDIR}/fps.compfCM-${CACAO_LOOPNUMBER}.datadir/mkmodestmp/fmodes2ball.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_DMmodes.fits

# modes including WFS-space diagonalization
cp ${CACAO_LOOPRUNDIR}/fps.compfCM-${CACAO_LOOPNUMBER}.datadir/mkmodestmp/fmodesWFSall.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_modesWFS_WFSdiag.fits
cp ${CACAO_LOOPRUNDIR}/fps.compfCM-${CACAO_LOOPNUMBER}.datadir/mkmodestmp/fmodesall.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_DMmodes_WFSdiag.fits

# copy the block structure files
cp ${CACAO_LOOPRUNDIR}/fps.compfCM-${CACAO_LOOPNUMBER}.datadir/param_NBmodeblocks.txt ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_NBmodeblocks.txt
cp ${CACAO_LOOPRUNDIR}/fps.compfCM-${CACAO_LOOPNUMBER}.datadir/param_NBmodes.txt ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_NBmodes.txt

# and copy the block files for future reference
for f in $(ls ${CACAO_LOOPRUNDIR}/fps.compfCM-${CACAO_LOOPNUMBER}.datadir/block*.txt) ; do
   cp $f ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_$(basename $f)
done



cp ${CACAO_LOOPRUNDIR}/fps.acqlin_zRM-${CACAO_LOOPNUMBER}.datadir/wfsref_mn.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_wfsref.fits
cp ${CACAO_LOOPRUNDIR}/fps.acqlin_zRM-${CACAO_LOOPNUMBER}.datadir/wfsmask_mkm.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_wfsmask.fits
cp ${CACAO_LOOPRUNDIR}/fps.acqlin_zRM-${CACAO_LOOPNUMBER}.datadir/wfsmap.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_wfsmap.fits
cp ${CACAO_LOOPRUNDIR}/fps.acqlin_zRM-${CACAO_LOOPNUMBER}.datadir/dmmask_mkm.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_dmmask.fits
cp ${CACAO_LOOPRUNDIR}/fps.acqlin_zRM-${CACAO_LOOPNUMBER}.datadir/dmslaved.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_dmslaved.fits
cp ${CACAO_LOOPRUNDIR}/fps.acqlin_zRM-${CACAO_LOOPNUMBER}.datadir/zrespM.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_zrespM.fits


cp ${CACAO_LOOPRUNDIR}/fps.acqlin_loRM-${CACAO_LOOPNUMBER}.datadir/respM.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_LOrespM.fits
cp ${CACAO_LOOPRUNDIR}/fps.acqlin_loRM-${CACAO_LOOPNUMBER}.datadir/RMpokeCube.fits ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_LODMmodes.fits


# write out complete path so someone following a symlink can easily track where we are
echo $(pwd)/${ARCHDIR} > ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_calib_dir.txt

# append timestamp
echo $(date -u --iso-8601=seconds) >> ${ARCHDIR}/aol${CACAO_LOOPNUMBER}_calib_archived.txt

echo "$(date -u --iso-8601=seconds) ARCHIVE ${calib}" >> AOcalibs/AOcalib-${CACAO_LOOPNUMBER}-log.txt
