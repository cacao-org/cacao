#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="AO loop execution script"
# Extended description
MSextdescr="AO loop script"
source milk-script-std-config
source cacao-check-cacaovars



NBframe="1000"
MSopt+=( "n:nbframe:set_NBframe:nbframe[long]:set number of frames" )
function set_NBframe() {
	NBframe="$1"
}

source milk-argparse


# Checking stream
streamcheckOK="OK"
checkstream ${CACAO_WFSSTREAM}

if [ ${streamcheckOK} == "FAIL" ]; then
echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] stream check failed"
exit
fi





# ======================================================================
# Turning source off
# ======================================================================

if [ $CACAO_FPSPROC_WFSCAMSIM = "ON" ]; then
sendFPScmd "setval wfscamsim-${CACAO_LOOPNUMBER}.fluxtotal 0.0"
fi

sleep 1

MILK_QUIET=1 milk << EOF
readshmim ${CACAO_WFSSTREAM}
streamave ..procinfo 1
streamave ..triggersname ${CACAO_WFSSTREAM}
streamave ..triggermode 3
streamave ..loopcntMax ${NBframe}
streamave ${CACAO_WFSSTREAM} ${CACAO_WFSSTREAM}_dark ${NBframe}
saveFITS ${CACAO_WFSSTREAM}_dark "${CACAO_WFSSTREAM}_dark.fits"
cpsh ${CACAO_WFSSTREAM}_dark aol${CACAO_LOOPNUMBER}_wfsdark
listim
exitCLI
EOF


# ======================================================================
# Turning source on
# ======================================================================

if [ $CACAO_FPSPROC_WFSCAMSIM = "ON" ]; then
FLUX=${CACAO_FPS_wfscamsim_fluxtotal:-100000}
sendFPScmd "setval wfscamsim-${CACAO_LOOPNUMBER}.fluxtotal ${FLUX}"
fi
