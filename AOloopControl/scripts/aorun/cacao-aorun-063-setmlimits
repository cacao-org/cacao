#!/usr/bin/env bash

# This script uses milk-argparse
# See milk-scriptexample for template and instructions

# script 1-line description
MSdescr="Set modal limits"

MSextdescr="Set modal limits
"



source milk-script-std-config
source cacao-check-cacaovars


MSarg+=( "alpha:float:power law" )

mlimitfloor="0.01"
MSopt+=( "f:floor:set_mlimitfloor:floor[float]:set modal limit floor (${mlimitfloor})" )
function set_mlimitfloor() {
	mlimitfloor="$1"
}

mlimitTT="1.0"
MSopt+=( "t:mlimitTT:set_mlimitTT:mlimitTT[float]:set modal limit for tip-tilt" )
function set_mlimitTT() {
	mlimitTT="$1"
}


source milk-argparse

mlimitalpha="${inputMSargARRAY[0]}"





# Checking stream
streamcheckOK="OK"
checkstream aol${CACAO_LOOPNUMBER}_mlimitfact

if [ ${streamcheckOK} == "FAIL" ]; then
	echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] stream check failed"
	cacaomsglog "ERROR stream check"
	exit 1
fi


# Checking FPS
FPScheckOK="OK"
checkFPSON CACAO_FPSPROC_MODALFILTERING ${CACAO_FPSPROC_MODALFILTERING}

if [ ${FPScheckOK} == "FAIL" ]; then
	echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] FPS check failed"
	cacaomsglog "ERROR FPS check"
	exit 1
fi







cacaomsglog "APPLYING MODAL LIMITS : galpha ${mgainalpha}  floor ${mlimitfloor}  TT ${mlimitTT}"

MILK_QUIET=1 milk << EOF
mload milkinfo
mload milkimagegen
readshmim aol${CACAO_LOOPNUMBER}_mlimitfact
info.imstats aol${CACAO_LOOPNUMBER}_mlimitfact
imgen.mkdist imd imsize0 1 1 1
imd1=imd/imsize0
imd2=(1.0-imd1)^${mlimitalpha}
imd3=(1-${mlimitfloor})*imd2+${mlimitfloor}
cp imd3 aol${CACAO_LOOPNUMBER}_mlimitfact
setpix aol${CACAO_LOOPNUMBER}_mlimitfact ${mlimitTT} 0 0
setpix aol${CACAO_LOOPNUMBER}_mlimitfact ${mlimitTT} 1 0
listim
exitCLI
EOF


