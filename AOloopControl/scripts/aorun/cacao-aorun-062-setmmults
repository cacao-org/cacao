#!/usr/bin/env bash

# This script uses milk-argparse
# See milk-scriptexample for template and instructions

# script 1-line description
MSdescr="Set modal mult coeffs"

MSextdescr="Set modal leak
"



source milk-script-std-config
source cacao-check-cacaovars


MSarg+=( "alpha:float:power law" )

mmultfloor="0.9"
MSopt+=( "f:floor:set_mmultfloor:floor[float]:set modal mult floor (${mmultfloor})" )
function set_mmultfloor() {
	mmultfloor="$1"
}

mmultTT="1.0"
MSopt+=( "t:mmultTT:set_mmultTT:mmultTT[float]:set modal mult for tip-tilt" )
function set_mmultTT() {
	mmultTT="$1"
}


source milk-argparse

mmultalpha="${inputMSargARRAY[0]}"




# Checking stream
streamcheckOK="OK"
checkstream aol${CACAO_LOOPNUMBER}_mmultfact

if [ ${streamcheckOK} == "FAIL" ]; then
	echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] stream check failed"
	cacaomsglog "ERROR stream check"
	exit 1
fi


# Checking FPS
FPScheckOK="OK"
checkFPSON CACAO_FPSPROC_MODALFILTERING ${CACAO_FPSPROC_MODALFILTERING}

if [ ${FPScheckOK} == "FAIL" ]; then
	echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] FPS check failed"
	cacaomsglog "ERROR FPS check"
	exit 1
fi







cacaomsglog "APPLYING MODAL MULTS : galpha ${mmultalpha}  floor ${mmultfloor}  TT ${mmultTT}"

MILK_QUIET=1 milk << EOF
mload milkinfo
mload milkimagegen
readshmim aol${CACAO_LOOPNUMBER}_mmultfact
info.imstats aol${CACAO_LOOPNUMBER}_mmultfact
imgen.mkdist imd imsize0 1 1 1
imd1=imd/imsize0
imd2=(1.0-imd1)^${mmultalpha}
imd3=(1-${mmultfloor})*imd2+${mmultfloor}
cp imd3 aol${CACAO_LOOPNUMBER}_mmultfact
setpix aol${CACAO_LOOPNUMBER}_mmultfact ${mmultTT} 0 0
setpix aol${CACAO_LOOPNUMBER}_mmultfact ${mmultTT} 1 0
listim
exitCLI
EOF

cacaomsglog "END"
