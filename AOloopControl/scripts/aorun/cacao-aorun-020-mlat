#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="Measure hardware latency"


MSextdescr="Measures hardware latency between input and output streams

Pokes input stream, listens to ouput stream
Requires acquWFS process to run

Writes output to env variables CACAO_WFSFRATE and CACAO_LATENCYHARDWFR
"

source milk-script-std-config
source cacao-check-cacaovars


WaitForCompletion=0
MSopt+=( "w:waitfcomp:set_WaitForCompletion::wait for process to complete to exist script" )
function set_WaitForCompletion() {
	WaitForCompletion=1
}


source milk-argparse


errexit=0

# Checking FPS
FPScheckOK="OK"
checkFPSON CACAO_FPSPROC_MLAT ${CACAO_FPSPROC_MLAT}

if [ ${FPScheckOK} == "FAIL" ]; then
echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] FPS check failed"
cacaomsglog "ERROR FPScheck"
errexit=1
fi


# Checking stream
streamcheckOK="OK"
checkstream aol${CACAO_LOOPNUMBER}_wfsim

if [ ${streamcheckOK} == "FAIL" ]; then
echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] stream check failed"
cacaomsglog "ERROR streamcheck"
errexit=1
fi


if [ $errexit = 1 ]; then
exit
fi



cacaomsglog "START"



sendFPScmd "setval mlat-${CACAO_LOOPNUMBER}.wfsstream aol${CACAO_LOOPNUMBER}_imWFS2"
sendFPScmd "confwupdate mlat-${CACAO_LOOPNUMBER}"
sendFPScmd "runstart mlat-${CACAO_LOOPNUMBER}"

if [ $WaitForCompletion == "1" ]; then
echo "Waiting for completion ..."
pOK=1
while [ $pOK -gt 0 ]; do
	sleep 0.2
	pOK=$(ps -alx| grep mlat-${CACAO_LOOPNUMBER} | grep RUNSTART | wc -l)
done
fi

cacaomsglog "EXIT"
