#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="Compute and log modal control stats"

MSextdescr="Compute and log modal control stats

Split modal stats into blocks for further processing
"
source milk-script-std-config
source cacao-check-cacaovars


MSarg+=( "action:string:action (start/stop/check)" )
source milk-argparse
ACTION="${inputMSargARRAY[0]}"


ACTIONOK=0

if [ ${ACTION} == "check" ]; then
	ACTIONOK=1
fi

# Checking FPS
FPScheckOK="OK"
checkFPSON CACAO_FPSPROC_MODALFILTERING ${CACAO_FPSPROC_MODALFILTERING}
checkFPSON CACAO_FPSPROC_MODALCTRL_STATS ${CACAO_FPSPROC_MODALCTRL_STATS}

if [ ${FPScheckOK} == "FAIL" ]; then
	echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] FPS check failed"
	cacaomsglog "ERROR FPScheck"
	exit 1
fi




if [ ${ACTION} == "start" ]; then
	ACTIONOK=1
	cacaomsglog "START"
	sendFPScmd "setval mctrlstats-${CACAO_LOOPNUMBER}.AOloopindex ${CACAO_LOOPNUMBER}"
	sendFPScmd "confwupdate mctrlstats-${CACAO_LOOPNUMBER}"
	sendFPScmd "runstart mctrlstats-${CACAO_LOOPNUMBER}"
fi


if [ ${ACTION} == "stop" ]; then
	ACTIONOK=1
	cacaomsglog "STOP"
	sendFPScmd "runstop mctrlstats-${CACAO_LOOPNUMBER}"
fi




if [ ${ACTIONOK} == 0 ]; then
	echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] ACTION $ACTION undefined"
	cacaomsglog "ERROR ACTION undefined"
	exit 1
fi

cacaomsglog "END"
