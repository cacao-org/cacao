#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="AO loop execution script"

MSextdescr="AO loop script"
source milk-script-std-config
source cacao-check-cacaovars

MSarg+=( "action:string:action (start/check)" )

source milk-argparse
ACTION="${inputMSargARRAY[0]}"


ACTIONOK=0




if [ ${ACTION} == "check" ]; then
ACTIONOK=1
fi


errexit=0

# Checking FPS
FPScheckOK="OK"
checkFPSON CACAO_FPSPROC_ACQUWFS ${CACAO_FPSPROC_ACQUWFS}
checkFPSON CACAO_FPSPROC_ACQLINZRM ${CACAO_FPSPROC_MEASURELINRESP}

if [ ${FPScheckOK} == "FAIL" ]; then
echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] FPS check failed"
errexit=1
fi


# Checking stream
streamcheckOK="OK"
checkstream aol${CACAO_LOOPNUMBER}_imWFS0
checkstream aol${CACAO_LOOPNUMBER}_imWFS1
checkstream aol${CACAO_LOOPNUMBER}_imWFS2

if [ ${streamcheckOK} == "FAIL" ]; then
echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] stream check failed"
errexit=1
fi


if [ $errexit = 1 ]; then
exit
fi








if [ ${ACTION} == "start" ]; then
ACTIONOK=1

sendFPScmd "setval measlinresp-${CACAO_LOOPNUMBER}.timing.WFSfrequ ${CACAO_WFSFRATE}"
sendFPScmd "setval measlinresp-${CACAO_LOOPNUMBER}.timing.hardwlatfr ${CACAO_LATENCYFR}"

sendFPScmd "setval measlinresp-${CACAO_LOOPNUMBER}.streamin aol${CACAO_LOOPNUMBER}_dmRM"
sendFPScmd "setval measlinresp-${CACAO_LOOPNUMBER}.streamout aol${CACAO_LOOPNUMBER}_imWFS2"

sendFPScmd "setval measlinresp-${CACAO_LOOPNUMBER}.inmodes ../conf/DMmodes/HpokeC.fits"
sendFPScmd "setval measlinresp-${CACAO_LOOPNUMBER}.outmodes outmodeC.fits"

sendFPScmd "setval measlinresp-${CACAO_LOOPNUMBER}.timing.autoTiming ON"


sendFPScmd "confwupdate measlinresp-${CACAO_LOOPNUMBER}"
sendFPScmd "runstart measlinresp-${CACAO_LOOPNUMBER}"

fi






if [ ${ACTIONOK} == 0 ]; then
echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] ACTION $ACTION undefined"
fi
