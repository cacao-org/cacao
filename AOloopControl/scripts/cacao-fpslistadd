#!/usr/bin/env bash

# TEMPLATE SCRIPT FOR ADDING CACAO FPS-ENABLED PROCESSES

# Runs from CACAO_LOOPROOTDIR

# For each FPS-enabled process:
# - entry is added to fpslist.txt file
# - fpssetup.setval files created


touch fpslist.txt


# log messages


LOGFILEDIR="$PWD/log"
mkdir $LOGFILEDIR
LOGFILENAME="${LOGFILEDIR}/$(basename $0).log"
rm $LOGFILENAME

mkdir -p fps.conf

function echolog {
    echo $1
    echo "$(date -u +"%Y%m%dT%H%M%S.%N %s.%N") $1" >> $LOGFILENAME
}

function runstrcmd {
    echolog "RUNNING CMD : $1"
    eval "$1"
}



# write header to fpssetup file
#
function addfpscmdheader {
    taskfname="fps.conf/fpssetup.cacaosetup-confstart.${fpsfname}.conf"
    rm ${taskfname}
    echo "# Function Parameter Structure (FPS) setup configuration" >> ${taskfname}
    echo "# Written by cacao-fpslistadd - edits will be overwritten and lost when re-running $0" >> ${taskfname}
    echo "# These are the default initial values for FPS entries" >> ${taskfname}
    echo "# This file is read by script cacao-setup, which sends its content to milk-fpsCTRL's input fifo upon confstart" >> ${taskfname}
    echo "# " >> ${taskfname}
}



# write entry to fpssetup file
#
function addfpscmd {
    taskfname="fps.conf/fpssetup.cacaosetup-confstart.${fpsfname}.conf"
    echolog "FPS CMD TO ${taskfname} : $1"
	echo "$1" >> ${taskfname}
}



echo "START cacao-fpslistadd"


echolog "START"


# User is expected to set FPS processes to ON or OFF before running this script
# Examples:

#export CACAO_FPSPROC_DMCOMB="ON"
#export CACAO_FPSPROC_STREAMDELAY="ON"
#export CACAO_FPSPROC_SIMMVMGPU="ON"
#export CACAO_FPSPROC_MLAT="ON"
#export CACAO_FPSPROC_ACQLINRM="ON"




if [ "${CACAO_FPSPROC_DMCH2DISP}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_DMCH2DISP"
    # ==============================================================================
    # ==========  DM combination ===================================================
    # ==============================================================================

    # FPS name
    fpsname="DMch2disp"
    fpsarg0="${CACAO_DMINDEX}"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}      cacaodm.DMcomb       ${CACAO_DMINDEX}"  >> fpslist.txt

        addfpscmdheader
        # infinite loop
        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 4" # delay
        addfpscmd "setval ${fpsfname}.procinfo.triggerdelay 0.00001" # 10us
        addfpscmd "setval ${fpsfname}.procinfo.triggertimeout 1" # 1s
        addfpscmd "setval ${fpsfname}.DMindex ${CACAO_DMINDEX}"
        addfpscmd "setval ${fpsfname}.DMxsize ${CACAO_DMxsize}"
        addfpscmd "setval ${fpsfname}.DMysize ${CACAO_DMysize}"
        addfpscmd "setval ${fpsfname}.DMcombout dm${CACAO_DMINDEX}disp"
        addfpscmd "setval ${fpsfname}.astrogrid aol${CACAO_LOOPNUMBER}_DMastrogrid"
        addfpscmd "setval ${fpsfname}.zpoffset.DMcomboutzpo aol${CACAO_LOOPNUMBER}_dmzpo"
    fi
else
    echolog "CACAO_FPSPROC_DMCH2DISP = OFF"
fi









if [ "${CACAO_FPSPROC_STREAMDELAY}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_STREAMDELAY"
    # ==============================================================================
    # ==========  streamdelay for simulation mode ==================================
    # ==============================================================================

    # FPS name
    fpsname="streamDelay"
    fpsarg0="${CACAO_DMINDEX}"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"


    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}    streamdelay         ${fpsarg0}"  >> fpslist.txt

        addfpscmdheader

        # Run simulator at finite frame rate
        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        # tigger mode is delay
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 4"
        # set delay to 100us = 10 kHz
        addfpscmd "setval ${fpsfname}.procinfo.triggerdelay 0.0001"

        addfpscmd "setval ${fpsfname}.in_name aol${CACAO_LOOPNUMBER}_dmdisp"
        addfpscmd "setval ${fpsfname}.out_name aol${CACAO_LOOPNUMBER}_dmdispD"
        addfpscmd "setval ${fpsfname}.delaysec 0.01"
        #addfpscmd "setval ${fpsfname}.dtus 10000"
        #addfpscmd "setval ${fpsfname}.timebuffsize 1000"
        #addfpscmd "setval ${fpsfname}.option.avedt 0.005"
    fi
else
    echolog "OFF CACAO_FPSPROC_STREAMDELAY"
fi






if [ "${CACAO_FPSPROC_SIMMVMGPU}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_SIMMVMGPU"
    # ==============================================================================
    # ========== GPU-based Linear Simulator ========================================
    # ==============================================================================

    # FPS name
    fpsname="simmvmgpu"
    fpsarg0="${CACAO_LOOPNUMBER}"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"


    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        #echo "${fpsname}      cuda.cudaextrmodes       ${fpsarg0}"  >> fpslist.txt
        echo "+milkcudacomp" >> fpslist.txt
        echo "${fpsname}      cuda.MVMmextrmodes       ${fpsarg0}"  >> fpslist.txt

        # time delay [s]
        LINSIMDT="0.001"

        # copy calibration files

        #runstrcmd "mkdir -p ${LOOPWORKDIR}/simLHS"
        #runstrcmd "cp simLHS/respM.fits ./${LOOPWORKDIR}/simLHS/simLHS.respM.fits"
        #runstrcmd "cp simLHS/wfsref.fits ./${LOOPWORKDIR}/simLHS/simLHS.wfsref.fits"

        #runstrcmd "cp ./${LOOPWORKDIR}/simLHS/simLHS.respM.fits ./${LOOPWORKDIR}/conf/shmim.aolsimLHSrespM.fits"
        #runstrcmd "cp ./${LOOPWORKDIR}/simLHS/simLHS.wfsref.fits ./${LOOPWORKDIR}/conf/shmim.aolsimLHSwfsref.fits"
        milk-FITS2shm "./simLHS/respM.fits" aol${CACAO_LOOPNUMBER}_simLHSrespM
        milk-FITS2shm "./simLHS/wfsref.fits" aol${CACAO_LOOPNUMBER}_simLHSwfsref


        addfpscmdheader
        addfpscmd "setval ${fpsfname}.insname aol${CACAO_LOOPNUMBER}_dmdispD"
        addfpscmd "setval ${fpsfname}.immodes aol${CACAO_LOOPNUMBER}_simLHSrespM"
        addfpscmd "setval ${fpsfname}.outcoeff aol${CACAO_LOOPNUMBER}_linsimWFS"
        addfpscmd "setval ${fpsfname}.outinit ON"

        # run simulator at finite frame rate
        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1" # infinite loop
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 4" # delay
        addfpscmd "setval ${fpsfname}.procinfo.triggerdelay ${LINSIMDT}"
        addfpscmd "setval ${fpsfname}.procinfo.triggertimeout 0.0"

        addfpscmd "setval ${fpsfname}.option.axmode 1"
        addfpscmd "setval ${fpsfname}.option.PROCESS OFF"
        addfpscmd "setval ${fpsfname}.option.TRACEMODE OFF"
        addfpscmd "setval ${fpsfname}.option.MODENORM OFF"
        addfpscmd "setval ${fpsfname}.option.sname_intot NULL"
        addfpscmd "setval ${fpsfname}.option.sname_refin NULL"
        addfpscmd "setval ${fpsfname}.option.sname_refout aolsimLHSwfsref"

    fi
else
    echolog "CACAO_FPSPROC_SIMMVMGPU = OFF"
fi






if [ "${CACAO_FPSPROC_MLAT}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MLAT"
    # ==============================================================================
    # ========== Measure Latency ===================================================
    # ==============================================================================

    # FPS name
    fpsname="mlat"
    fpsarg0="${CACAO_LOOPNUMBER}"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}           cacaopt.mlat     ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.NBiter 20"
        addfpscmd "setval ${fpsfname}.dmstream aol${CACAO_LOOPNUMBER}_dmRM"
        addfpscmd "setval ${fpsfname}.wfsstream aol${CACAO_LOOPNUMBER}_wfsim"
        #fpscmd "setval ${fpsfname}.out.dirname ${outdir}"
    fi
else
    echolog "CACAO_FPSPROC_MLAT = OFF"
fi





if [ "${CACAO_FPSPROC_ACQUWFS}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_ACQUWFS"
    # ==============================================================================
    # ========== WFS acquire frames ================================================
    # ==============================================================================

    # FPS name
    fpsname="acquWFS"
    fpsarg0="${CACAO_LOOPNUMBER}"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}           cacaoio.acquireWFS     ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"

        # run simulator at finite frame rate
        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1" # infinite loop
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 3" # semaphore
        addfpscmd "setval ${fpsfname}.procinfo.triggersname aol${CACAO_LOOPNUMBER}_wfsim "


        addfpscmd "setval ${fpsfname}.comp.WFSnormalize ON"
        addfpscmd "setval ${fpsfname}.comp.darksub ON"
        addfpscmd "setval ${fpsfname}.comp.imtotal ON"
        addfpscmd "setval ${fpsfname}.comp.normwfsim ON"

        addfpscmd "setval ${fpsfname}.wfszpo aol${CACAO_LOOPNUMBER}_wfszpo"
    fi
else
    echolog "OFF CACAO_FPSPROC_ACQUWFS"
fi





# old - to be deprecated
if [ "${CACAO_FPSPROC_ACQLINZRM}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_ACQLINZRM"
    # ==============================================================================
    # ========== [OLD] Acquire Linear Response Matrix (ZONAL) ============================
    # ==============================================================================

    # FPS name
    fpsname="acqlin_zRM"
    fpsarg0="${CACAO_LOOPNUMBER}"

    # get scripts that will be used
    mkdir -p ${LOOPWORKDIR}/cacaobin
    ln -s $(which cacao-RMdecode) ${LOOPWORKDIR}/cacaobin/cacao-RMdecode
    ln -s $(which cacao-mkDMWFSmasks) ${LOOPWORKDIR}/cacaobin/cacao-mkDMWFSmasks
    ln -s $(which cacao-mkDMslaveActprox) ${LOOPWORKDIR}/cacaobin/cacao-mkDMslaveActprox
    ln -s $(which cacao-mkLODMmodes) ${LOOPWORKDIR}/cacaobin/cacao-mkLODMmodes
    ln -s $(which cacao-NULL) ${LOOPWORKDIR}/cacaobin/cacao-NULL

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}           cacaoac.aolmeaslWFSrespC     ${fpsarg0}" >> fpslist.txt


        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"

        addfpscmd "setval ${fpsfname}.FPS_mlat mlat-${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.FPS_DMcomb DMch2disp-${CACAO_DMINDEX}"

        # default startup values
        addfpscmd "setval ${fpsfname}.normalize ON"
        addfpscmd "setval ${fpsfname}.Hpoke ON"
        addfpscmd "setval ${fpsfname}.autoTiming ON"
        addfpscmd "setval ${fpsfname}.compDMmask ON"
        addfpscmd "setval ${fpsfname}.compMpoke ON"

        addfpscmd "setval ${fpsfname}.timing.NBave 1"
        addfpscmd "setval ${fpsfname}.timing.NBcycle 2"
        addfpscmd "setval ${fpsfname}.timing.NBinnerCycle 1"
        addfpscmd "setval ${fpsfname}.timing.NBexcl 0"

        addfpscmd "setval ${fpsfname}.MaskMode ON"
        addfpscmd "setval ${fpsfname}.exec.RMdecode cacaobin/cacao-RMdecode"
        addfpscmd "setval ${fpsfname}.exec.mkDMWFSmasks cacaobin/cacao-mkDMWFSmasks"
        addfpscmd "setval ${fpsfname}.exec.mkDMslaveact cacaobin/cacao-mkDMslaveActprox"
        addfpscmd "setval ${fpsfname}.exec.mkLODMmodes cacaobin/cacao-mkLODMmodes"
        #addfpscmd "setval ${fpsfname}.out.dirname ${outdir}"

    fi
else
    echolog "OFF CACAO_FPSPROC_ACQLINZRM"
fi





if [ "${CACAO_FPSPROC_ACQWFSLINCALZ}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_ACQWFSLINCALZ"
    # ==============================================================================
    # ========== [NEW] Acquire Linear Response Matrix (ZONAL) ============================
    # ==============================================================================

    # FPS name
    fpsname="acqWFSlincal_z"
    fpsarg0="${CACAO_LOOPNUMBER}"

    # get scripts that will be used
    mkdir -p ${LOOPWORKDIR}/cacaobin
    ln -s $(which cacao-RMdecode) ${LOOPWORKDIR}/cacaobin/cacao-RMdecode
    ln -s $(which cacao-mkDMWFSmasks) ${LOOPWORKDIR}/cacaobin/cacao-mkDMWFSmasks
    ln -s $(which cacao-mkDMslaveActprox) ${LOOPWORKDIR}/cacaobin/cacao-mkDMslaveActprox
    ln -s $(which cacao-mkLODMmodes) ${LOOPWORKDIR}/cacaobin/cacao-mkLODMmodes
    ln -s $(which cacao-NULL) ${LOOPWORKDIR}/cacaobin/cacao-NULL

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}           cacaoac.acqWFSlincal     ${fpsarg0}" >> fpslist.txt


        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.dmstream aol${CACAO_LOOPNUMBER}_dmRM"

		# Timing
        addfpscmd "setval ${fpsfname}.timing.FPS_mlat mlat-${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.timing.autoTiming ON"
        addfpscmd "setval ${fpsfname}.timing.NBave 1"
        addfpscmd "setval ${fpsfname}.timing.NBcycle 2"
        addfpscmd "setval ${fpsfname}.timing.NBinnerCycle 1"
        addfpscmd "setval ${fpsfname}.timing.NBexcl 0"

        # DM
        addfpscmd "setval ${fpsfname}.RMDMmask.FPS_DMcomb DMch2disp-${CACAO_DMINDEX}"

        # default startup values
        addfpscmd "setval ${fpsfname}.normalize ON"
        addfpscmd "setval ${fpsfname}.Hpoke ON"
        addfpscmd "setval ${fpsfname}.compDMmask ON"
        addfpscmd "setval ${fpsfname}.compMpoke ON"

        addfpscmd "setval ${fpsfname}.MaskMode ON"
        addfpscmd "setval ${fpsfname}.exec.RMdecode cacaobin/cacao-RMdecode"
        addfpscmd "setval ${fpsfname}.exec.mkDMWFSmasks cacaobin/cacao-mkDMWFSmasks"
        addfpscmd "setval ${fpsfname}.exec.mkDMslaveact cacaobin/cacao-mkDMslaveActprox"
        addfpscmd "setval ${fpsfname}.exec.mkLODMmodes cacaobin/cacao-mkLODMmodes"
        #fpscmd "setval ${fpsfname}.out.dirname ${outdir}"

    fi
else
    echolog "OFF CACAO_FPSPROC_ACQWFSLINCALZ"
fi







if [ "${CACAO_FPSPROC_ACQLINLORM}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_ACQLINLORM"
    # ==============================================================================
    # ========== Acquire Linear Response Matrix (Low Orders - MODAL) ===============
    # ==============================================================================

    # FPS name
    fpsname="acqlin_loRM"
    fpsarg0="${CACAO_LOOPNUMBER}"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}           cacaoac.aolmeaslWFSrespC     ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"

        addfpscmd "setval ${fpsfname}.FPS_mlat mlat-${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.FPS_DMcomb DMch2disp-${CACAO_DMINDEX}"


        # default startup values
        addfpscmd "setval ${fpsfname}.normalize ON"
        addfpscmd "setval ${fpsfname}.Hpoke OFF"
        addfpscmd "setval ${fpsfname}.autoTiming ON"
        addfpscmd "setval ${fpsfname}.compDMmask OFF"
        addfpscmd "setval ${fpsfname}.compMpoke OFF"


        addfpscmd "setval ${fpsfname}.timing.NBave 1"
        addfpscmd "setval ${fpsfname}.timing.NBcycle 4"
        addfpscmd "setval ${fpsfname}.timing.NBinnerCycle 1"
        addfpscmd "setval ${fpsfname}.timing.NBexcl 0"


        addfpscmd "setval ${fpsfname}.fn_pokeC respM_LOmodes.fits"

        addfpscmd "setval ${fpsfname}.MaskMode OFF"

        addfpscmd "setval ${fpsfname}.exec.RMdecode cacaobin/cacao-NULL"
        addfpscmd "setval ${fpsfname}.exec.mkDMWFSmasks cacaobin/cacao-NULL"
        addfpscmd "setval ${fpsfname}.exec.mkDMslaveact cacaobin/cacao-NULL"
        addfpscmd "setval ${fpsfname}.exec.mkLODMmodes cacaobin/cacao-NULL"


        #addfpscmd "setval ${fpsfname}.out.dirname ${outdir}"

    fi
else
    echolog "OFF CACAO_FPSPROC_ACQLINLORM"
fi




# TO BE DEPRECATED
#
if [ "${CACAO_FPSPROC_COMPFCM}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_COMPFCM"
    # ==============================================================================
    # ========== Compute Control Matrix using Fourier modes (spatial frequency) ====
    # ==============================================================================

    # FPS name
    fpsname="compfCM"
    fpsarg0="${CACAO_LOOPNUMBER}"

    #mkdir -p ${LOOPWORKDIR}/conf-staged
    #mkdir -p ${LOOPWORKDIR}/mkmodestmp

    #mkdir -p ${LOOPWORKDIR}/DMmodes
    #mkdir -p ${LOOPWORKDIR}/respM
    #mkdir -p ${LOOPWORKDIR}/contrM
    #mkdir -p ${LOOPWORKDIR}/contrMc
    #mkdir -p ${LOOPWORKDIR}/contrMcact




    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "+milkZernikePolyn;milkcudacomp" >> fpslist.txt
        echo "${fpsname}         cacaocc.aolcomputeCM       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"

        addfpscmd "setval ${fpsfname}.FPS_zRMacqu acqlin_zRM-${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.FPS_loRMacqu acqlin_loRM-${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.FPS_DMcomb DMch2disp-${CACAO_DMINDEX}"

        #addfpscmd "setval ${fpsfname}.out.dirname ${outdir}"

    fi
else
    echolog "OFF CACAO_FPSPROC_COMPFCM"
fi




# WILL REPLACE COMPFCM
#
if [ "${CACAO_FPSPROC_COMPCTRLMODES}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_COMPCTRLMODES"
    # ==============================================================================
    # ========== Compute Control Matrix using Fourier modes (spatial frequency) ====
    # ==============================================================================

    # FPS name
    fpsname="compctrlmodes"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "+milkZernikePolyn;milkcudacomp" >> fpslist.txt
        echo "${fpsname}         cacaocc.compctrlmodes       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"

        addfpscmd "setval ${fpsfname}.FPS_zRMacqu acqlin_zRM-${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.auxRM.FPS_loRMacqu acqlin_loRM-${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.DMgeom.FPS_DMcomb DMch2disp-${CACAO_DMINDEX}"

        #addfpscmd "setval ${fpsfname}.out.dirname ${outdir}"

    fi
else
    echolog "OFF CACAO_FPSPROC_COMPFCM"
fi







if [ "${CACAO_FPSPROC_COMPSCM}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_COMPSCM"
    # ==============================================================================
    # ========== Compute Control Matrix (straight, no modal decomposition) =========
    # ==============================================================================

    # FPS name
    fpsname="compsCM"
    fpsarg0="${CACAO_LOOPNUMBER}"

    #mkdir -p ${LOOPWORKDIR}/sCM



    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}         cacaocc.aolRM2CM       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.fname_respM fps.acqlin_zRM-${CACAO_LOOPNUMBER}.datadir/zrespM_mn.fits"

        #fpscmd "setval ${fpsfname}.out.dirname ${outdir}"

    fi
else
    echolog "OFF CACAO_FPSPROC_COMPSCM"
fi










if [ "${CACAO_FPSPROC_MODESEXTRACTWFSGPU}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MODESEXTRACTWFSGPU"
    # ==============================================================================
    # ========== GPU-based MVM extract modes ============================================
    # ==============================================================================

    # FPS name
    fpsname="modesextractWFSGPU"
    fpsarg0="${CACAO_LOOPNUMBER}"



    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}         cuda.cudaextrmodes       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"

        # input frame
        addfpscmd "setval ${fpsfname}.sname_in aol${CACAO_LOOPNUMBER}_imWFS0"
        addfpscmd "setval ${fpsfname}.option.sname_intot aol${CACAO_LOOPNUMBER}_imWFS0tot"

        # we use respM for direct MVM as it is already orthonormal set of modes
        addfpscmd "setval ${fpsfname}.sname_modes aol${CACAO_LOOPNUMBER}_modesWFS"
        # TBD: load in shm

        addfpscmd "setval ${fpsfname}.option.sname_refin aol${CACAO_LOOPNUMBER}_wfsref"

        addfpscmd "setval ${fpsfname}.sname_outmodesval aol${CACAO_LOOPNUMBER}_modeval"
        addfpscmd "setval ${fpsfname}.outinit ON"

        addfpscmd "setval ${fpsfname}.option.GPUindex 0"
        addfpscmd "setval ${fpsfname}.option.PROCESS ON"
        addfpscmd "setval ${fpsfname}.option.TRACEMODE ON"
        addfpscmd "setval ${fpsfname}.option.MODENORM ON"


        addfpscmd "setval ${fpsfname}.option.insem 2"

        addfpscmd "setval ${fpsfname}.option.axmode 0"

        # run GPU full speed
        addfpscmd "setval ${fpsfname}.option.twait 0"
    fi
else
    echolog "OFF CACAO_FPSPROC_MODESEXTRACTWFSGPU"
fi






if [ "${CACAO_FPSPROC_AOLOOP_RUN}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_AOLOOP_RUN"
    # ==============================================================================
    # ========== Run control loop =========
    # ==============================================================================

    # FPS name
    fpsname="loopRUN"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}         cacao.aolrun       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.sn_wfs aol${CACAO_LOOPNUMBER}_imWFS1"

        addfpscmd "setval ${fpsfname}.loopgain 0.02"
        addfpscmd "setval ${fpsfname}.loopmult 0.99"
        addfpscmd "setval ${fpsfname}.loopON OFF"
        addfpscmd "setval ${fpsfname}.loopZERO OFF"
        addfpscmd "setval ${fpsfname}.wfsrefON OFF"

        addfpscmd "setval ${fpsfname}.sn_cmat aol${CACAO_LOOPNUMBER}_CMat"
        addfpscmd "setval ${fpsfname}.sn_DMout aol${CACAO_LOOPNUMBER}_dmC"

    fi
else
    echolog "OFF CACAO_FPSPROC_AOLOOP_RUN"
fi





if [ "${CACAO_FPSPROC_MVMGPU_WFS2CMODEVAL}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MVM_WFS2CMODEVAL"
    # ======================================================================
    # ========== MVM-compute control modes values from WFS =================
    # ======================================================================

    # FPS name
    fpsname="wfs2cmodeval"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "+milkcudacomp" >> fpslist.txt
        echo "${fpsname}         cuda.MVMmextrmodes       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader


        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 3"
        addfpscmd "setval ${fpsfname}.procinfo.triggersname aol${CACAO_LOOPNUMBER}_imWFS1"


        addfpscmd "setval ${fpsfname}.insname aol${CACAO_LOOPNUMBER}_imWFS1"
        addfpscmd "setval ${fpsfname}.immodes aol${CACAO_LOOPNUMBER}_modesWFS"
        addfpscmd "setval ${fpsfname}.outcoeff aol${CACAO_LOOPNUMBER}_modevalWFS"

        addfpscmd "setval ${fpsfname}.option.sname_intot aol${CACAO_LOOPNUMBER}_imWFS0tot"

        #TODO : populate wfsref
        addfpscmd "setval ${fpsfname}.option.sname_refin aol${CACAO_LOOPNUMBER}_wfsref"

        addfpscmd "setval ${fpsfname}.outinit ON"

        addfpscmd "setval ${fpsfname}.GPUindex 0"

        addfpscmd "setval ${fpsfname}.option.PROCESS ON"
        addfpscmd "setval ${fpsfname}.option.TRACEMODE OFF"
        addfpscmd "setval ${fpsfname}.option.MODENORM ON"

        addfpscmd "setval ${fpsfname}.option.twait 0"
    fi
else
    echolog "OFF CACAO_FPSPROC_MVM_WFS2CMODEVAL"
fi




if [ "${CACAO_FPSPROC_MODALFILTERING}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MODALFILTERING"
    # ======================================================================
    # ========== Modal control filtering ===================================
    # ======================================================================

    # FPS name
    fpsname="mfilt"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}         cacao.modalfilter       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader

        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 3"
        addfpscmd "setval ${fpsfname}.procinfo.triggersname aol${CACAO_LOOPNUMBER}_modevalWFS"

        addfpscmd "setval ${fpsfname}.inmval aol${CACAO_LOOPNUMBER}_modevalWFS"
        addfpscmd "setval ${fpsfname}.outmval aol${CACAO_LOOPNUMBER}_modevalDM"

    fi
else
    echolog "OFF CACAO_FPSPROC_MODALFILTERING"
fi






if [ "${CACAO_FPSPROC_MVMGPU_ZPO}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MVM_ZPO"
    # ======================================================================
    # ========== MVM-compute DM command from control modes =================
    # ======================================================================

    # FPS name
    fpsname="zpo"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "+milkcudacomp" >> fpslist.txt
        echo "${fpsname}         cuda.MVMmextrmodes       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader

        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 3"
        addfpscmd "setval ${fpsfname}.procinfo.triggersname aol${CACAO_LOOPNUMBER}_dmzpo"

        addfpscmd "setval ${fpsfname}.insname aol${CACAO_LOOPNUMBER}_dmzpo"
        addfpscmd "setval ${fpsfname}.immodes aol${CACAO_LOOPNUMBER}_zrespM"
        addfpscmd "setval ${fpsfname}.outcoeff aol${CACAO_LOOPNUMBER}_wfszpo"
        addfpscmd "setval ${fpsfname}.option.sname_intot NULL"


        addfpscmd "setval ${fpsfname}.option.sname_refin NULL"

        addfpscmd "setval ${fpsfname}.outinit OFF"

        addfpscmd "setval ${fpsfname}.GPUindex 3"

        addfpscmd "setval ${fpsfname}.option.axmode 1"
        addfpscmd "setval ${fpsfname}.option.PROCESS OFF"
        addfpscmd "setval ${fpsfname}.option.TRACEMODE OFF"
        addfpscmd "setval ${fpsfname}.option.MODENORM OFF"

        addfpscmd "setval ${fpsfname}.option.twait 0"

    fi
else
    echolog "OFF CACAO_FPSPROC_MVM_ZPO"
fi





if [ "${CACAO_FPSPROC_MODALCTRL_STATS}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MODALCTRL_STATS"
    # ======================================================================
    # ========== Modal control stats =======================================
    # ======================================================================

    # FPS name
    fpsname="mctrlstats"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}         cacao.modalCTRLstats       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader

        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 3"
        addfpscmd "setval ${fpsfname}.procinfo.triggersname aol${CACAO_LOOPNUMBER}_modevalOL_buff"
    fi
else
    echolog "OFF CACAO_FPSPROC_MODALCTRL_STATS"
fi







if [ "${CACAO_FPSPROC_MVMGPU_CMODEVAL2DM}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MVM_CMODEVAL2DM"
    # ======================================================================
    # ========== MVM-compute DM command from control modes =================
    # ======================================================================

    # FPS name
    fpsname="mvalC2dm"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "+milkcudacomp" >> fpslist.txt
        echo "${fpsname}         cuda.MVMmextrmodes       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader

        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 3"
        addfpscmd "setval ${fpsfname}.procinfo.triggersname aol${CACAO_LOOPNUMBER}_modevalDM"

        addfpscmd "setval ${fpsfname}.insname aol${CACAO_LOOPNUMBER}_modevalDM"
        addfpscmd "setval ${fpsfname}.immodes aol${CACAO_LOOPNUMBER}_DMmodes"
        addfpscmd "setval ${fpsfname}.outcoeff aol${CACAO_LOOPNUMBER}_dmC"
        addfpscmd "setval ${fpsfname}.option.sname_intot NULL"


        addfpscmd "setval ${fpsfname}.option.sname_refin NULL"

        addfpscmd "setval ${fpsfname}.outinit OFF"

        addfpscmd "setval ${fpsfname}.GPUindex 3"

        addfpscmd "setval ${fpsfname}.option.axmode 1"
        addfpscmd "setval ${fpsfname}.option.PROCESS OFF"
        addfpscmd "setval ${fpsfname}.option.TRACEMODE OFF"
        addfpscmd "setval ${fpsfname}.option.MODENORM OFF"

        addfpscmd "setval ${fpsfname}.option.twait 0"
    fi
else
    echolog "OFF CACAO_FPSPROC_MVM_WFS2CMODEVAL"
fi





if [ "${CACAO_FPSPROC_MVMGPU_OLMODEVAL2DM}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MVMGPU_OLMODEVAL2DM"
    # ======================================================================
    # ========== MVM-compute DM shape from pseudo open-loop modes ==========
    # ======================================================================

    # FPS name
    fpsname="mvalOL2dm"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "+milkcudacomp" >> fpslist.txt
        echo "${fpsname}         cuda.MVMmextrmodes       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader

        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 3"
        addfpscmd "setval ${fpsfname}.procinfo.triggersname aol${CACAO_LOOPNUMBER}_modevalOL"

        addfpscmd "setval ${fpsfname}.insname aol${CACAO_LOOPNUMBER}_modevalOL"
        addfpscmd "setval ${fpsfname}.immodes aol${CACAO_LOOPNUMBER}_DMmodes"
        addfpscmd "setval ${fpsfname}.outcoeff aol${CACAO_LOOPNUMBER}_dmOL"
        addfpscmd "setval ${fpsfname}.option.sname_intot NULL"


        addfpscmd "setval ${fpsfname}.option.sname_refin NULL"

        addfpscmd "setval ${fpsfname}.outinit OFF"

        addfpscmd "setval ${fpsfname}.GPUindex 3"

        addfpscmd "setval ${fpsfname}.option.axmode 1"
        addfpscmd "setval ${fpsfname}.option.PROCESS OFF"
        addfpscmd "setval ${fpsfname}.option.TRACEMODE OFF"
        addfpscmd "setval ${fpsfname}.option.MODENORM OFF"

        addfpscmd "setval ${fpsfname}.option.twait 0"
    fi
else
    echolog "OFF CACAO_FPSPROC_MVMGPU_OLMODEVAL2DM"
fi




if [ "${CACAO_FPSPROC_MVMGPU_WFSMODEVAL2DM}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_MVMGPU_WFSMODEVAL2DM"
    # ======================================================================
    # ========== MVM-compute DM shape from WFS modes =======================
    # ======================================================================

    # FPS name
    fpsname="mvalWFS2dm"
    fpsarg0="${CACAO_LOOPNUMBER}"


    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "+milkcudacomp" >> fpslist.txt
        echo "${fpsname}         cuda.MVMmextrmodes       ${fpsarg0}" >> fpslist.txt

        addfpscmdheader

        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 3"
        addfpscmd "setval ${fpsfname}.procinfo.triggersname aol${CACAO_LOOPNUMBER}_modevalWFS"

        addfpscmd "setval ${fpsfname}.insname aol${CACAO_LOOPNUMBER}_modevalWFS"
        addfpscmd "setval ${fpsfname}.immodes aol${CACAO_LOOPNUMBER}_DMmodes"
        addfpscmd "setval ${fpsfname}.outcoeff aol${CACAO_LOOPNUMBER}_dmWFS"
        addfpscmd "setval ${fpsfname}.option.sname_intot NULL"


        addfpscmd "setval ${fpsfname}.option.sname_refin NULL"

        addfpscmd "setval ${fpsfname}.outinit OFF"

        addfpscmd "setval ${fpsfname}.GPUindex 3"

        addfpscmd "setval ${fpsfname}.option.axmode 1"
        addfpscmd "setval ${fpsfname}.option.PROCESS OFF"
        addfpscmd "setval ${fpsfname}.option.TRACEMODE OFF"
        addfpscmd "setval ${fpsfname}.option.MODENORM OFF"

        addfpscmd "setval ${fpsfname}.option.twait 0"
    fi
else
    echolog "OFF CACAO_FPSPROC_MVMGPU_WFSMODEVAL2DM"
fi







CACAO_CMDMINDEX="2"


if [ "${CACAO_FPSPROC_CMDMCOMB}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_CMDMCOMB"
    # ==============================================================================
    # ==========  DM combination (control modes) ===================================
    # ==============================================================================

    # FPS name
    fpsname="DMcomb"
    fpsarg0="cm${CACAO_DMINDEX}"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}      cacaodm.DMcomb       cm${CACAO_DMINDEX}"  >> fpslist.txt

        addfpscmdheader
        # infinite loop
        addfpscmd "setval ${fpsfname}.procinfo.loopcntMax -1"
        addfpscmd "setval ${fpsfname}.procinfo.triggermode 4" # delay
        addfpscmd "setval ${fpsfname}.procinfo.triggerdelay 0.00001" # 10us
        addfpscmd "setval ${fpsfname}.DMindex ${CACAO_CMDMINDEX}"
        addfpscmd "setval ${fpsfname}.DMxsize 100"
        addfpscmd "setval ${fpsfname}.DMysize 1"
    fi
else
    echolog "CACAO_FPSPROC_CMDMCOMB = OFF"
fi





if [ "${CACAO_FPSPROC_ACQLINCMRM}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_ACQLINCMRM"
    # ==============================================================================
    # ========== Acquire Linear Response Matrix (control modes - MODAL) ============
    # ==============================================================================

    # FPS name
    fpsname="acqlin_cmRM"
    fpsarg0="${CACAO_LOOPNUMBER}"

	CACAO_CMLOOPNUMBER="2"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}           cacaoac.aolmeaslWFSrespC     ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.AOloopindex ${CACAO_CMLOOPNUMBER}"

        addfpscmd "setval ${fpsfname}.FPS_mlat mlat-${CACAO_LOOPNUMBER}"
        addfpscmd "setval ${fpsfname}.FPS_DMcomb DMch2disp-cm${CACAO_DMINDEX}"


        # default startup values
        addfpscmd "setval ${fpsfname}.normalize OFF"
        addfpscmd "setval ${fpsfname}.Hpoke OFF"
        addfpscmd "setval ${fpsfname}.autoTiming ON"
        addfpscmd "setval ${fpsfname}.compDMmask OFF"
        addfpscmd "setval ${fpsfname}.compMpoke OFF"


        addfpscmd "setval ${fpsfname}.timing.NBave 1"
        addfpscmd "setval ${fpsfname}.timing.NBcycle 4"
        addfpscmd "setval ${fpsfname}.timing.NBinnerCycle 1"
        addfpscmd "setval ${fpsfname}.timing.NBexcl 0"


        addfpscmd "setval ${fpsfname}.fn_pokeC respM_LOmodes.fits"

        addfpscmd "setval ${fpsfname}.MaskMode OFF"

        addfpscmd "setval ${fpsfname}.exec.RMdecode cacaobin/cacao-NULL"
        addfpscmd "setval ${fpsfname}.exec.mkDMWFSmasks cacaobin/cacao-NULL"
        addfpscmd "setval ${fpsfname}.exec.mkDMslaveact cacaobin/cacao-NULL"
        addfpscmd "setval ${fpsfname}.exec.mkLODMmodes cacaobin/cacao-NULL"


        #addfpscmd "setval ${fpsfname}.out.dirname ${outdir}"

    fi
else
    echolog "OFF CACAO_FPSPROC_ACQLINCMRM"
fi





if [ "${CACAO_FPSPROC_DMATMTURB}" = "ON" ]; then
    echolog "ON  CACAO_FPSPROC_DMATMTURB"
    # ==============================================================================
    # ========== DM Atmospheric Turbulence simulator ===============================
    # ==============================================================================

    # FPS name
    fpsname="DMatmturb"
    fpsarg0="${CACAO_DMINDEX}"
    DMTURBCHAN="10"

    # FPS full name
    fpsfname="${fpsname}-${fpsarg0}"

    if grep -q "${fpsname}" fpslist.txt
    then
        echolog "Process ${fpsname} already registered - skipping"
    else
        echolog "Adding process ${fpsname}"
        echo "${fpsname}           cacaodm.dmturb     ${fpsarg0}" >> fpslist.txt

        addfpscmdheader
        addfpscmd "setval ${fpsfname}.dmstream dm${CACAO_DMINDEX}disp${DMTURBCHAN}"
        addfpscmd "setval ${fpsfname}.turbfname atmturbC.fits"

    fi
else
    echolog "OFF CACAO_FPSPROC_DMATMTURB"
fi






# Compute predictive filters

if [ "${CACAO_FPSPROC_MKPF00}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_MKPF00"
BLKindex="00"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-MKPF
else
echolog "OFF CACAO_FPSPROC_MKPF00"
fi

if [ "${CACAO_FPSPROC_MKPF01}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_MKPF01"
BLKindex="01"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-MKPF
else
echolog "OFF CACAO_FPSPROC_MKPF01"
fi

if [ "${CACAO_FPSPROC_MKPF02}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_MKPF02"
BLKindex="02"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-MKPF
else
echolog "OFF CACAO_FPSPROC_MKPF02"
fi

if [ "${CACAO_FPSPROC_MKPF03}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_MKPF03"
BLKindex="03"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-MKPF
else
echolog "OFF CACAO_FPSPROC_MKPF03"
fi

if [ "${CACAO_FPSPROC_MKPF04}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_MKPF04"
BLKindex="04"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-MKPF
else
echolog "OFF CACAO_FPSPROC_MKPF04"
fi

if [ "${CACAO_FPSPROC_MKPF05}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_MKPF05"
BLKindex="05"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-MKPF
else
echolog "OFF CACAO_FPSPROC_MKPF05"
fi



# Apply predictive filters


if [ "${CACAO_FPSPROC_APPLYPF00}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_APPLYPF00"
BLKindex="00"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-APPLYPF
else
echolog "OFF CACAO_FPSPROC_APPLYPF00"
fi

if [ "${CACAO_FPSPROC_APPLYPF01}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_APPLYPF01"
BLKindex="01"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-APPLYPF
else
echolog "OFF CACAO_FPSPROC_APPLYPF01"
fi

if [ "${CACAO_FPSPROC_APPLYPF02}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_APPLYPF02"
BLKindex="02"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-APPLYPF
else
echolog "OFF CACAO_FPSPROC_APPLYPF02"
fi

if [ "${CACAO_FPSPROC_APPLYPF03}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_APPLYPF03"
BLKindex="03"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-APPLYPF
else
echolog "OFF CACAO_FPSPROC_APPLYPF03"
fi

if [ "${CACAO_FPSPROC_APPLYPF04}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_APPLYPF04"
BLKindex="04"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-APPLYPF
else
echolog "OFF CACAO_FPSPROC_APPLYPF04"
fi

if [ "${CACAO_FPSPROC_APPLYPF05}" = "ON" ]; then
echolog "ON  CACAO_FPSPROC_APPLYPF05"
BLKindex="05"
source ${MILK_INSTALLDIR}/bin/cacao-fpslistadd-APPLYPF
else
echolog "OFF CACAO_FPSPROC_APPLYPF05"
fi

for fpslf in cacao-fpslistadd-*; do
echo "Processing fpslistadd file ${fpslf}"
. ./${fpslf}
done

echolog "END"
