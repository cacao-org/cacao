#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="cacao fpsCTRL log (re)start"

MSextdescr="Runs cacao-fpsctrl-logprocess in tmux session
"

source milk-script-std-config
source cacao-check-cacaovars


LogRebuild=0
MSopt+=( "r:rebuild:set_rebuild::rebuild log from start of UT day" )
function set_rebuild() {
	LogRebuild=1
}

twait="120"
MSopt+=( "w:twait:set_twait:seconds[float]:time interval between status polls" )
function set_twait() {
	twait="$1"
}

source milk-argparse


tmuxname="fpsCTRLlog-out-${CACAO_LOOPNAME}"


# check if tmux session exists
#
set +o pipefail
{ tmux has-session -t ${tmuxname} 2>/dev/null; retstatus=$?; } || :
set -o pipefail
echo "retstatus = $retstatus"
if [ "${retstatus}" = "0" ]; then
	# found
	echo "FOUND SESSION  ${tmuxname} : kill it"
	tmux send-keys -t ${tmuxname} "fg" C-m
	tmux send-keys -t ${tmuxname} C-c
	tmux send-keys -t ${tmuxname} "exit" C-m
	sleep 0.5
	tmux kill-session -t ${tmuxname} > /dev/null || :
fi



tmux new-session -d -s ${tmuxname}
tmux send-keys -t ${tmuxname} "bash" C-m


if [ ${LogRebuild} = 1 ]; then
	tmux send-keys -t ${tmuxname} "cacao-fpsctrl-logprocess -r &" C-m
else
	tmux send-keys -t ${tmuxname} "cacao-fpsctrl-logprocess &" C-m
fi


# Log current status every twait

echo ""
echo "Log processing running in tmux session ${tmuxname}"
echo "Polling full status every ${twait} sec"
echo "Type CTRL+C to stop polling"
echo ""


function cleanexit
{
	echo "Clean exit"
	echo "Stopping log process in tmux ${tmuxname}"
	tmux send-keys -t ${tmuxname} "fg" C-m
	tmux send-keys -t ${tmuxname} C-c	
	exit 0
}

trap cleanexit EXIT

while [ 1 ]; do
	sleep 0.5
	tmuxfpsname="${CACAO_LOOPNAME}_fpsCTRL"
	tmux send-keys -t ${tmuxfpsname} "l"
	sleep 1
	tmux send-keys -t ${tmuxfpsname} "L"

	sleep ${twait}
done


