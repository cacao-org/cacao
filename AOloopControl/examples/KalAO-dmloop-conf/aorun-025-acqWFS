#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="AO loop execution script"



source cacaovars.*.bash

# Extended description
MSdescr="AO loop script

CACAO_LOOPNAME = ${CACAO_LOOPNAME}
"


# standard configuration
# location ./scripts/
source milk-script-std-config

# prerequisites
#

RequiredCommands=( tmux milk )

fpsCTRLtmuxname="${CACAO_LOOPNAME}_fpsCTRL"
fpsCTRLfifo="${MILK_SHM_DIR}/${fpsCTRLtmuxname}.fifo"
RequiredPipes=( ${fpsCTRLfifo} )

RequiredDirs=()





# SCRIPT MANDATORY ARGUMENTS
# syntax: "name:type(s)/test(s):description"
#



# SCRIPT OPTIONS
# syntax: "short:long:functioncall:args[types]:description"
#

# parse arguments
source milk-argparse




function sendFPScmd {
    echo "SENDING: $1"
    echo "$1" >> ${fpsCTRLfifo}
}




# ======================================================================
# acquWFS
# ======================================================================

sendFPScmd "setval acquWFS-${CACAO_LOOPNUMBER}.comp.darksub OFF"
sendFPScmd "setval acquWFS-${CACAO_LOOPNUMBER}.comp.WFSnormalize OFF"
sendFPScmd "setval acquWFS-${CACAO_LOOPNUMBER}.comp.WFSrefsub ON"
sendFPScmd "setval acquWFS-${CACAO_LOOPNUMBER}.comp.WFSsigav ON"
sendFPScmd "setval acquWFS-${CACAO_LOOPNUMBER}.comp.WFSrefc ON"
sendFPScmd "setval acquWFS-${CACAO_LOOPNUMBER}.comp.imtotal OFF"
sendFPScmd "setval acquWFS-${CACAO_LOOPNUMBER}.comp.normwfsim OFF"


sendFPScmd "confwupdate acquWFS-${CACAO_LOOPNUMBER}"
sendFPScmd "runstart acquWFS-${CACAO_LOOPNUMBER}"
