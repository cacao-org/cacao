#!/bin/bash



if [ ! -v aolconfFLAG ]; then
echo "ERROR: This script should be called from aolconf main script"
exit
fi






function function_computeModesCM 
{
tmuxnameMCM="aol${LOOPNUMBER}mkmodes"
sleep 0.2
tmux new-session -s ${tmuxnameMCM} -d
sleep 0.2
tmux send-keys -t ${tmuxnameMCM} "" C-c
tmux send-keys -t ${tmuxnameMCM} "" C-m
tmux send-keys -t ${tmuxnameMCM} "./auxscripts/waitonfile ./runproc/FUNCTION_computeModesCM.lock" C-m

logRunningProcessQ "aolmkmodes" "$tmuxnameMCM" "Compute control modes and control matrix"

computeModesCMscriptfile="function_computeModesCM.script"
rm $computeModesCMscriptfile
touch $computeModesCMscriptfile

echo "mkdir -p DMmodes" >> $computeModesCMscriptfile
echo "mkdir -p respM" >> $computeModesCMscriptfile
echo "mkdir -p contrM" >> $computeModesCMscriptfile
echo "mkdir -p contrMc" >> $computeModesCMscriptfile
echo "mkdir -p contrMcact" >> $computeModesCMscriptfile



echo "echo \"./auxscripts/aolmkmodes2 ${cpamax} -1 ${SVDlimall} ${mkModesMODE}\" >> aolcmd.txt"  >> $computeModesCMscriptfile
echo "./auxscripts/aolmkmodes2 ${cpamax} -1 ${SVDlimall} ${mkModesMODE}"  >> $computeModesCMscriptfile



datestr=`date -u +%Y-%m-%d_%H:%M:%S`

echo "cp ./mkmodestmp/fmodesall.fits DMmodes/DMmodes_${datestr}.fits"  >> $computeModesCMscriptfile
echo "echo \"DMmodes/DMmodes_${datestr}.fits\" > ./conf_staged/shmim.DMmodes.name.txt"  >> $computeModesCMscriptfile

echo "cp ./mkmodestmp/fmodesWFSall.fits respM/respM_${datestr}.fits"  >> $computeModesCMscriptfile
echo "echo \"respM/respM_${datestr}.fits\" > ./conf_staged/shmim.respM.name.txt"  >> $computeModesCMscriptfile

echo "cp ./mkmodestmp/cmatall.fits contrM/contrM_${datestr}.fits"  >> $computeModesCMscriptfile
echo "echo \"contrM/contrM_${datestr}.fits\" > ./conf_staged/shmim.contrM.name.txt"  >> $computeModesCMscriptfile

echo "cp ./mkmodestmp/NBmodes.txt ./conf_staged/param_NBmodes.txt" >> $computeModesCMscriptfile

for i in `seq 0 20`;
do
i2=$(printf "%02d" "$i")
fname="mkmodestmp/fmodes_${i2}.fits"
#if [ -e "$fname" ]; then
echo "if [ -f \"$fname\" ]; then cp ./mkmodestmp/fmodes_${i2}.fits DMmodes/DMmodes${i2}_${datestr}.fits; fi"  >> $computeModesCMscriptfile
echo "if [ -f \"$fname\" ]; then echo \"DMmodes/DMmodes${i2}_${datestr}.fits\" > ./conf_staged/shmim.DMmodes${i2}.name.txt; fi"  >> $computeModesCMscriptfile

echo "if [ -f \"$fname\" ]; then cp ./mkmodestmp/fmodesWFS_${i2}.fits respM/respM${i2}_${datestr}.fits; fi"  >> $computeModesCMscriptfile
echo "if [ -f \"$fname\" ]; then echo \"respM/respM${i2}_${datestr}.fits\" > ./conf_staged/shmim.respM${i2}.name.txt; fi"  >> $computeModesCMscriptfile

echo "if [ -f \"$fname\" ]; then cp ./mkmodestmp/cmat_${i2}.fits contrM/contrM${i2}_${datestr}.fits; fi"  >> $computeModesCMscriptfile
echo "if [ -f \"$fname\" ]; then echo \"contrM/contrM${i2}_${datestr}.fits\" > ./conf_staged/shmim.contrM${i2}.name.txt; fi"  >> $computeModesCMscriptfile

echo "if [ -f \"$fname\" ]; then cp ./mkmodestmp/cmatc_${i2}.fits contrMc/contrMc${i2}_${datestr}.fits; fi"  >> $computeModesCMscriptfile
echo "if [ -f \"$fname\" ]; then echo \"contrMc/contrMc${i2}_${datestr}.fits\" > ./conf_staged/shmim.contrMc${i2}.name.txt; fi"  >> $computeModesCMscriptfile

echo "if [ -f \"$fname\" ]; then cp ./mkmodestmp/cmatcact_${i2}.fits contrMcact/contrMcact${i2}_${datestr}.fits; fi"  >> $computeModesCMscriptfile
echo "if [ -f \"$fname\" ]; then echo \"contrMcact/contrMcact${i2}_${datestr}.fits\" > ./conf_staged/shmim.contrMcact${i2}_00.name.txt; fi"  >> $computeModesCMscriptfile
#fi
done
chmod +x $computeModesCMscriptfile
tmux send-keys -t $tmuxnameMCM "./$computeModesCMscriptfile" C-m


tmux send-keys -t $tmuxnameMCM "rm runproc/aolmkmodes.runproc" C-m


tmux send-keys -t $tmuxnameMCM "./aolconfscripts/aollog \"$LOOPNAME\" \"CM computation DONE\" &" C-m
tmux send-keys -t $tmuxnameMCM "dologext $LOOPNAME CM computation DONE &" C-m
}



