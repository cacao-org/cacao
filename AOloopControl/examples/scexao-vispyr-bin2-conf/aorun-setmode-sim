#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions

# script 1-line description
MSdescr="AO loop execution script"

MSextdescr="AO loop script"
source milk-script-std-config
source cacao-check-cacaovars

source milk-argparse





errexit=0

# Checking FPS
FPScheckOK="OK"
checkFPSON CACAO_FPSPROC_ACQUWFS ${CACAO_FPSPROC_ACQUWFS}
checkFPSON CACAO_FPSPROC_ACQLINZRM ${CACAO_FPSPROC_ACQLINZRM}
checkFPSON CACAO_FPSPROC_ACQLINLORM ${CACAO_FPSPROC_ACQLINLORM}

if [ ${FPScheckOK} == "FAIL" ]; then
echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] FPS check failed"
errexit=1
fi


if [ $errexit = 1 ]; then
exit
fi




sendFPScmd "setval wfscamsim-${CACAO_LOOPNUMBER}.compphnoise OFF"
sendFPScmd "confwupdate wfscamsim-${CACAO_LOOPNUMBER}"

sendFPScmd "setval acquWFS-0.WFSnormfloor 0.01"

sendFPScmd "setval acqlin_zRM-${CACAO_LOOPNUMBER}.normalize ON"
sendFPScmd "setval acqlin_zRM-${CACAO_LOOPNUMBER}.LOmaxCPA 3.0"
sendFPScmd "setval acqlin_zRM-${CACAO_LOOPNUMBER}.timing.NBcycle 4"
sendFPScmd "setval acqlin_zRM-${CACAO_LOOPNUMBER}.timing.NBexcl 1"
sendFPScmd "confwupdate acqlin_zRM-${CACAO_LOOPNUMBER}"

sendFPScmd "setval acqlin_loRM-${CACAO_LOOPNUMBER}.timing.NBcycle 20"
sendFPScmd "setval acqlin_loRM-${CACAO_LOOPNUMBER}.timing.NBexcl 1"
sendFPScmd "confwupdate acqlin_loRM-${CACAO_LOOPNUMBER}"
